version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: authgateway-keycloak
    ports:
      - "8081:8080"
    environment:
      # Admin credentials
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      
      # Database configuration (using H2 for simplicity)
      # KC_DB: h2-file
      # KC_DB_URL: jdbc:h2:file:/opt/keycloak/data/keycloak
      
      # Hostname configuration
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      
      # HTTP configuration
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      
      # Development mode
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    
    command:
      - start-dev
      # - --import-realm
    
    volumes:
      - keycloak_data:/opt/keycloak/data
      # - ./keycloak-realm.json:/opt/keycloak/data/import/realm.json:ro
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # networks:
    #   - authgateway-network

  # Optional: PostgreSQL database for production-like setup
  postgres:
    image: postgres:15
    container_name: authgateway-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - authgateway-network
    profiles:
      - production

  # Keycloak with PostgreSQL (production-like setup)
  keycloak-prod:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: authgateway-keycloak-prod
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    command:
      - start
      - --import-realm
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/realm.json:ro
    depends_on:
      postgres:
        condition: service_started
    networks:
      - authgateway-network
    profiles:
      - production

  # Optional: Mock backend service for testing
  mock-backend:
    image: nginx:alpine
    container_name: authgateway-backend
    ports:
      - "9000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend-response.json:/usr/share/nginx/html/api/index.html:ro
    networks:
      - authgateway-network
    profiles:
      - testing

volumes:
  keycloak_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  authgateway-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 