# ===========================================
# Auth Gateway Configuration
# ===========================================

# Server Configuration
# server.port=8000
# server.host=0.0.0.0
# camel.server.enabled=true
# camel.server.staticEnabled=true
# camel.server.staticPath=static

# ===========================================
# API Key Authentication Configuration
# ===========================================

# Comma-separated list of valid API keys
# In production, these should be stored in a secure vault or environment variables
api.keys=12345,secret-api-key,demo-key,vized-key

# ===========================================
# OAuth2 Configuration
# ===========================================

# OAuth2 Client Configuration
oauth2.client.id=vized-client
oauth2.client.secret=rtyJVIiCTlVYgbO3UuStMTavFOW3OppG

# OAuth2 Token Introspection Endpoint
# Replace with your actual OAuth2 provider's introspection endpoint
oauth2.introspect.url=http://localhost:8081/realms/Vized/protocol/openid-connect/token/introspect

# OAuth2 Token Endpoint (for testing)
# This one is not actively used by the routes but good to keep it consistent
oauth2.token.url=http://localhost:8081/realms/Vized/protocol/openid-connect/token

# ===========================================
# OIDC JWT Configuration
# ===========================================

# OIDC Provider Configuration
oidc.issuer=http://localhost:8081/realms/Vized
oidc.jwks.url=http://localhost:8081/realms/Vized/protocol/openid-connect/certs

# JWT Configuration
jwt.audience=camel-gateway
jwt.issuer=http://localhost:8081/auth/realms/Vized

# ===========================================
# Backend Service Configuration
# ===========================================

# Backend service URL (if forwarding to actual backend)
backend.service.url=http://localhost:9000/api

# ===========================================
# Camel Configuration
# ===========================================

# Camel context configuration
camel.springboot.name=AuthGateway
camel.springboot.main-run-controller=true
camel.springboot.shutdown-timeout=30

# Component configurations
camel.component.netty-http.configuration.host=0.0.0.0
camel.component.netty-http.configuration.port=8080
# camel.component.netty-http.configuration.staticFileDirectory=static

# ===========================================
# Development/Testing Configuration
# ===========================================

# Enable/disable specific authentication methods for testing
auth.apikey.enabled=true
auth.oauth2.enabled=true
auth.oidc.enabled=true

# Mock backend responses (for demo purposes)
backend.mock.enabled=true

# ===========================================
# Authorization & Scope Configuration
# ===========================================

# Scope to Role Mappings
# Format: scope=role (comma-separated for multiple mappings)
scope.role.mappings.admin=ADMIN
scope.role.mappings.user=USER
scope.role.mappings.orders:read=ORDERS_READ
scope.role.mappings.orders:write=ORDERS_WRITE
scope.role.mappings.payments:read=PAYMENTS_READ
scope.role.mappings.payments:write=PAYMENTS_WRITE
scope.role.mappings.profile:read=PROFILE_READ
scope.role.mappings.profile:write=PROFILE_WRITE

# Endpoint Access Control
# Define which scopes are required for each endpoint pattern
endpoint.access.orders=orders:read,orders:write
endpoint.access.payments=payments:read,payments:write
endpoint.access.profile=profile:read,profile:write
endpoint.access.admin=admin

# Default scopes for authenticated users
default.user.scopes=user,profile:read

# ===========================================
# Security Headers Configuration
# ===========================================

# CORS configuration
cors.allowed.origins=*
cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed.headers=*
cors.max.age=3600

# Security headers
security.headers.enabled=true
security.headers.x-frame-options=DENY
security.headers.x-content-type-options=nosniff
security.headers.x-xss-protection=1; mode=block 