# application.properties
# Hexagonal Architecture Configuration
# Switch between different adapter implementations

# ==========================================
# REPOSITORY ADAPTER CONFIGURATION
# ==========================================
# Available options: memory, file, database
# This demonstrates the adapter pattern - same port, different implementations
customer.repository.type=memory

# For file adapter, you can specify the file location
customer.file.location=./customers.json

# For database adapter (in real implementation)
# customer.database.url=jdbc:postgresql://localhost:5432/customers
# customer.database.username=admin
# customer.database.password=secret

# ==========================================
# NOTIFICATION ADAPTER CONFIGURATION
# ==========================================
# Available options: log, email, slack
notification.type=log

# Email configuration (for email adapter)
# notification.email.smtp.host=smtp.gmail.com
# notification.email.smtp.port=587
# notification.email.username=your-email@example.com
# notification.email.password=your-password

# ==========================================
# APPLICATION CONFIGURATION
# ==========================================
# HTTP Server settings
server.port=8080
server.host=0.0.0.0

# Logging level
# camel.main.loggerLevel=INFO

# ==========================================
# EXAMPLES OF SWITCHING ADAPTERS
# ==========================================
# Uncomment different configurations to switch adapters:

# Configuration 1: In-memory with log notifications (Default - Fast development)
# customer.repository.type=memory
# notification.type=log

# Configuration 2: File-based with email notifications (Persistent storage)
# customer.repository.type=file
# notification.type=email

# Configuration 3: Database with Slack notifications (Production-like)
# customer.repository.type=database
# notification.type=slack

# ==========================================
# ADDITIONAL ADAPTER CONFIGURATIONS
# ==========================================
# You can add more adapter-specific configurations here
# This demonstrates how hexagonal architecture allows for easy configuration switching

# Circuit breaker settings (for resilience patterns)
# circuit.breaker.enabled=true
# circuit.breaker.failure.threshold=5
# circuit.breaker.timeout=30000

# Caching adapter settings
# cache.enabled=true
# cache.ttl=300
# cache.provider=redis

# Metrics and monitoring
# metrics.enabled=true
# metrics.endpoint=/metrics
# tracing.enabled=true